{"version":3,"sources":["../../../src/plugins/api/word.js"],"names":[],"mappings":"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","file":"word.js","sourcesContent":["import Boom from 'boom';\nimport debug from 'debug';\nimport * as reqp from 'request-promise';\nimport *  as secret from '../../../secret.json';\n\nconst logger = debug('word');\n\nlet announced_user = false;\n\nexport default function root(server) {\n\n  function slackpost(request, reply) {\n    const text = request.payload.text\n    const user_id = request.payload.user_id\n    console.log('new slackpost', text)\n\n    const search_terms = [{\n      regex: /xmas|crimbo|festive|merry|festive|jolly|christmas/i,\n      name: 'christmas'\n    },{\n      regex: /beer/i,\n      name: 'beer'\n    }]\n\n    const found_words = search_terms.map(testWord)\n\n    function testWord(search_term) {\n      console.log('testing')\n      if (search_term.regex.test(text)){\n        console.log('found', search_term.name)\n        saveWord(search_term.name)\n      }\n    }\n\n    function saveWord(name) {\n      server.methods.Word.findOneAndUpdate(\n        {\n          word:name\n        }, {\n          $inc: { count:1 }\n        }, { \n          upsert: true\n        })\n        .then(result => { console.log(result) }, \n              err => { console.log(err) })\n      announced_user = getUserDetails(user_id)\n    }\n\n    reply()\n  }\n\n  function getUserDetails(user_id) {\n    const params = {\n      uri: 'https://slack.com/api/users.info?token=' + secret.token,\n      method: 'GET'\n    }\n    reqp(params).then(reply => {\n      announced_user = reply\n    })\n  }\n\n  function post(request, reply) {\n    const word = request.payload.word;\n    console.log('new request to post:', word)\n    const new_word = new server.methods.Word({word:word})\n    console.log(new_word)\n    new_word.save().then(result => {\n      reply(result)\n    }, err => {\n      console.log(err)\n      reply(err)\n    })\n  }\n\n  function getAll(request, reply) {\n    console.log('new request to getAll')\n\n    server.methods.Word.find({})\n      .then(words => {\n        if (announced_user) {\n          words.announced_user = announced_user\n          announced_user = false\n        }\n        reply(words);\n      }, err => {\n        logger.error(err);\n        reply(Boom.badImplementation());\n      });\n  }\n\n  function get(request, reply) {\n    const word = request.params.word;\n    console.log('new request to get:', word)\n\n    server.methods.Word.find({ word: word })\n      .then(words => {\n        reply(words);\n      }, err => {\n        logger.error(err);\n        reply(Boom.badImplementation());\n      });\n  }\n\n\n  return {\n    slackpost,\n    post,\n    get,\n    getAll\n  };\n\n}\n"]}